@model LPCopiers.Models.ContactForm

<script src="~/Scripts/jquery-1.8.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery-ui-1.8.24.min.js"></script>


@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Contact Form</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.CName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CName)
            @Html.ValidationMessageFor(model => model.CName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Customer)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Customer)
            @Html.ValidationMessageFor(model => model.Customer)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AccountNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AccountNo)
            @Html.ValidationMessageFor(model => model.AccountNo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CompanyURL)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompanyURL)
            @Html.ValidationMessageFor(model => model.CompanyURL)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NoOfUnits)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NoOfUnits)
            @Html.ValidationMessageFor(model => model.NoOfUnits)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactTitle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactTitle)
            @Html.ValidationMessageFor(model => model.ContactTitle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactName)
            @Html.ValidationMessageFor(model => model.ContactName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Street)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Street)
            @Html.ValidationMessageFor(model => model.Street)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Town)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Town)
            @Html.ValidationMessageFor(model => model.Town)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PostCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PostCode)
            @Html.ValidationMessageFor(model => model.PostCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Phone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Phone)
            @Html.ValidationMessageFor(model => model.Phone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.VisitType)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.VisitType)
            @Html.ValidationMessageFor(model => model.VisitType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.VisitDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.VisitDate, new { @id="visitDate", @placeholder="mm/dd/yyyy" })
            @*@Html.EditorFor(model => model.VisitDate,"{0:dd/MM/yyyy}", new { @id = "visitDate" })*@
            @Html.ValidationMessageFor(model => model.VisitDate)
        </div>

        <p>
            <input type="submit" value="Submit" class="medium success btn" />
        </p>
    </fieldset>
}

<script type="text/javascript">
    $("#visitDate").datepicker({
        minDate: +7, maxDate: +90,
        dateFormat: "mm/dd/yy"
    });

    //$.validator.addMethod('date', function (value, element) {
    //    if (this.optional(element)) {
    //        return true;
    //    }
    //    var ok = true;
    //    try{
    //        $.datepicker.parseDate('dd/MM/yyyy', value);
    //    }
    //    catch(err){
    //        ok = false;
    //    }
    //    return ok;
    //});
</script>


